// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using Coherence.Toolkit;
    using Coherence.Toolkit.Bindings;
    using Coherence.Entities;
    using Coherence.ProtocolDef;
    using Coherence.Brook;
    using Coherence.Toolkit.Bindings.ValueBindings;
    using Coherence.Toolkit.Bindings.TransformBindings;
    using Coherence.Connection;
    using Coherence.SimulationFrame;
    using Coherence.Interpolation;
    using Coherence.Log;
    using Logger = Coherence.Log.Logger;
    using UnityEngine.Scripting;
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_1649b29844b2c644fa407af4a788e555_ed23eaaa413f49138ea04b115279ebec : PositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldPosition);
        public override string CoherenceComponentName => "WorldPosition";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(coherenceSync.coherencePosition); }
            set { coherenceSync.coherencePosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldPosition)coherenceComponent).value;
            if (!coherenceSync.HasParentWithCoherenceSync) { value += floatingOriginDelta; }

            var simFrame = ((WorldPosition)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldPosition)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldPosition();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_1649b29844b2c644fa407af4a788e555_b3711d41388f4f33b4428d3674c9ab91 : RotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldOrientation);
        public override string CoherenceComponentName => "WorldOrientation";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(coherenceSync.coherenceRotation); }
            set { coherenceSync.coherenceRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldOrientation)coherenceComponent).value;

            var simFrame = ((WorldOrientation)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldOrientation)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldOrientation();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_1649b29844b2c644fa407af4a788e555_474db5ced5c34115a1e9a29ab10c0dda : ScaleBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(GenericScale);
        public override string CoherenceComponentName => "GenericScale";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(coherenceSync.coherenceLocalScale); }
            set { coherenceSync.coherenceLocalScale = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((GenericScale)coherenceComponent).value;

            var simFrame = ((GenericScale)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (GenericScale)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new GenericScale();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_1649b29844b2c644fa407af4a788e555_c8149766004b458582371d680bde1481 : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_1649b29844b2c644fa407af4a788e555_8065859479899050318);
        public override string CoherenceComponentName => "_1649b29844b2c644fa407af4a788e555_8065859479899050318";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_1649b29844b2c644fa407af4a788e555_8065859479899050318)coherenceComponent).y;

            var simFrame = ((_1649b29844b2c644fa407af4a788e555_8065859479899050318)coherenceComponent).ySimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_1649b29844b2c644fa407af4a788e555_8065859479899050318)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.y = Value;
            }
            else
            {
                update.y = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.ySimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _1649b29844b2c644fa407af4a788e555_8065859479899050318();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_1649b29844b2c644fa407af4a788e555_282c4d6f7d1f44bf9dd1a36767ee7b14 : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_1649b29844b2c644fa407af4a788e555_8065859479899050318);
        public override string CoherenceComponentName => "_1649b29844b2c644fa407af4a788e555_8065859479899050318";
        public override uint FieldMask => 0b00000000000000000000000000000010;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_1649b29844b2c644fa407af4a788e555_8065859479899050318)coherenceComponent).jump;

            var simFrame = ((_1649b29844b2c644fa407af4a788e555_8065859479899050318)coherenceComponent).jumpSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_1649b29844b2c644fa407af4a788e555_8065859479899050318)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.jump = Value;
            }
            else
            {
                update.jump = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.jumpSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _1649b29844b2c644fa407af4a788e555_8065859479899050318();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_1649b29844b2c644fa407af4a788e555_cf90ec20e78e48e3ad3c617d4f5f09c0 : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_1649b29844b2c644fa407af4a788e555_8065859479899050318);
        public override string CoherenceComponentName => "_1649b29844b2c644fa407af4a788e555_8065859479899050318";
        public override uint FieldMask => 0b00000000000000000000000000000100;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_1649b29844b2c644fa407af4a788e555_8065859479899050318)coherenceComponent).run;

            var simFrame = ((_1649b29844b2c644fa407af4a788e555_8065859479899050318)coherenceComponent).runSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_1649b29844b2c644fa407af4a788e555_8065859479899050318)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.run = Value;
            }
            else
            {
                update.run = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.runSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _1649b29844b2c644fa407af4a788e555_8065859479899050318();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_1649b29844b2c644fa407af4a788e555_a6ba6ee51a344108b70e138323d49057 : BoolAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_1649b29844b2c644fa407af4a788e555_8065859479899050318);
        public override string CoherenceComponentName => "_1649b29844b2c644fa407af4a788e555_8065859479899050318";
        public override uint FieldMask => 0b00000000000000000000000000001000;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.GetBool(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetBool(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_1649b29844b2c644fa407af4a788e555_8065859479899050318)coherenceComponent).mainGun;

            var simFrame = ((_1649b29844b2c644fa407af4a788e555_8065859479899050318)coherenceComponent).mainGunSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_1649b29844b2c644fa407af4a788e555_8065859479899050318)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.mainGun = Value;
            }
            else
            {
                update.mainGun = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.mainGunSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _1649b29844b2c644fa407af4a788e555_8065859479899050318();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_1649b29844b2c644fa407af4a788e555_a116e541526e4b3bab417a24e35d8b69 : BoolAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_1649b29844b2c644fa407af4a788e555_8065859479899050318);
        public override string CoherenceComponentName => "_1649b29844b2c644fa407af4a788e555_8065859479899050318";
        public override uint FieldMask => 0b00000000000000000000000000010000;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.GetBool(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetBool(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_1649b29844b2c644fa407af4a788e555_8065859479899050318)coherenceComponent).secondGun;

            var simFrame = ((_1649b29844b2c644fa407af4a788e555_8065859479899050318)coherenceComponent).secondGunSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_1649b29844b2c644fa407af4a788e555_8065859479899050318)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.secondGun = Value;
            }
            else
            {
                update.secondGun = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.secondGunSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _1649b29844b2c644fa407af4a788e555_8065859479899050318();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_1649b29844b2c644fa407af4a788e555_47e4f13324454607b388192a9643627b : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_1649b29844b2c644fa407af4a788e555_8065859479899050318);
        public override string CoherenceComponentName => "_1649b29844b2c644fa407af4a788e555_8065859479899050318";
        public override uint FieldMask => 0b00000000000000000000000000100000;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_1649b29844b2c644fa407af4a788e555_8065859479899050318)coherenceComponent).sit;

            var simFrame = ((_1649b29844b2c644fa407af4a788e555_8065859479899050318)coherenceComponent).sitSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_1649b29844b2c644fa407af4a788e555_8065859479899050318)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.sit = Value;
            }
            else
            {
                update.sit = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.sitSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _1649b29844b2c644fa407af4a788e555_8065859479899050318();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_1649b29844b2c644fa407af4a788e555_ac40bc2d3dad40738a15ee41106f660c : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_1649b29844b2c644fa407af4a788e555_8065859479899050318);
        public override string CoherenceComponentName => "_1649b29844b2c644fa407af4a788e555_8065859479899050318";
        public override uint FieldMask => 0b00000000000000000000000001000000;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_1649b29844b2c644fa407af4a788e555_8065859479899050318)coherenceComponent).x;

            var simFrame = ((_1649b29844b2c644fa407af4a788e555_8065859479899050318)coherenceComponent).xSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_1649b29844b2c644fa407af4a788e555_8065859479899050318)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.x = Value;
            }
            else
            {
                update.x = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.xSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _1649b29844b2c644fa407af4a788e555_8065859479899050318();
        }    
    }

    [UnityEngine.Scripting.Preserve]
    public class CoherenceSync_1649b29844b2c644fa407af4a788e555 : CoherenceSyncBaked
    {
        private Entity entityId;
        private Logger logger = Coherence.Log.Log.GetLogger<CoherenceSync_1649b29844b2c644fa407af4a788e555>();
        
        
        
        private IClient client;
        private CoherenceBridge bridge;
        
        private readonly Dictionary<string, Binding> bakedValueBindings = new Dictionary<string, Binding>()
        {
            ["ed23eaaa413f49138ea04b115279ebec"] = new Binding_1649b29844b2c644fa407af4a788e555_ed23eaaa413f49138ea04b115279ebec(),
            ["b3711d41388f4f33b4428d3674c9ab91"] = new Binding_1649b29844b2c644fa407af4a788e555_b3711d41388f4f33b4428d3674c9ab91(),
            ["474db5ced5c34115a1e9a29ab10c0dda"] = new Binding_1649b29844b2c644fa407af4a788e555_474db5ced5c34115a1e9a29ab10c0dda(),
            ["c8149766004b458582371d680bde1481"] = new Binding_1649b29844b2c644fa407af4a788e555_c8149766004b458582371d680bde1481(),
            ["282c4d6f7d1f44bf9dd1a36767ee7b14"] = new Binding_1649b29844b2c644fa407af4a788e555_282c4d6f7d1f44bf9dd1a36767ee7b14(),
            ["cf90ec20e78e48e3ad3c617d4f5f09c0"] = new Binding_1649b29844b2c644fa407af4a788e555_cf90ec20e78e48e3ad3c617d4f5f09c0(),
            ["a6ba6ee51a344108b70e138323d49057"] = new Binding_1649b29844b2c644fa407af4a788e555_a6ba6ee51a344108b70e138323d49057(),
            ["a116e541526e4b3bab417a24e35d8b69"] = new Binding_1649b29844b2c644fa407af4a788e555_a116e541526e4b3bab417a24e35d8b69(),
            ["47e4f13324454607b388192a9643627b"] = new Binding_1649b29844b2c644fa407af4a788e555_47e4f13324454607b388192a9643627b(),
            ["ac40bc2d3dad40738a15ee41106f660c"] = new Binding_1649b29844b2c644fa407af4a788e555_ac40bc2d3dad40738a15ee41106f660c(),
        };
        
        private Dictionary<string, Action<CommandBinding, CommandsHandler>> bakedCommandBindings = new Dictionary<string, Action<CommandBinding, CommandsHandler>>();
        
        public CoherenceSync_1649b29844b2c644fa407af4a788e555()
        {
        }
        
        public override Binding BakeValueBinding(Binding valueBinding)
        {
            if (bakedValueBindings.TryGetValue(valueBinding.guid, out var bakedBinding))
            {
                valueBinding.CloneTo(bakedBinding);
                return bakedBinding;
            }
            
            return null;
        }
        
        public override void BakeCommandBinding(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            if (bakedCommandBindings.TryGetValue(commandBinding.guid, out var commandBindingBaker))
            {
                commandBindingBaker.Invoke(commandBinding, commandsHandler);
            }
        }
        
        public override void ReceiveCommand(IEntityCommand command)
        {
            switch (command)
            {
                default:
                    logger.Warning(Coherence.Log.Warning.ToolkitBakedSyncReceiveCommandUnhandled,
                        $"CoherenceSync_1649b29844b2c644fa407af4a788e555 Unhandled command: {command.GetType()}.");
                    break;
            }
        }
        
        public override List<ICoherenceComponentData> CreateEntity(bool usesLodsAtRuntime, string archetypeName, AbsoluteSimulationFrame simFrame)
        {
            if (!usesLodsAtRuntime)
            {
                return null;
            }
            
            if (Archetypes.IndexForName.TryGetValue(archetypeName, out int archetypeIndex))
            {
                var components = new List<ICoherenceComponentData>()
                {
                    new ArchetypeComponent
                    {
                        index = archetypeIndex,
                        indexSimulationFrame = simFrame,
                        FieldsMask = 0b1
                    }
                };

                return components;
            }
    
            logger.Warning(Coherence.Log.Warning.ToolkitBakedSyncCreateEntityMissingArchetype,
                $"Unable to find archetype {archetypeName} in dictionary. Please, bake manually (coherence > Bake)");
            
            return null;
        }
        
        public override void Dispose()
        {
        }
        
        public override void Initialize(Entity entityId, CoherenceBridge bridge, IClient client, CoherenceInput input, Logger logger)
        {
            this.logger = logger.With<CoherenceSync_1649b29844b2c644fa407af4a788e555>();
            this.bridge = bridge;
            this.entityId = entityId;
            this.client = client;        
        }
    }
}
